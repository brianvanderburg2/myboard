/**
\page page_readme Readme

MyBoard - Copyright (C) 2015 Brian Allen Vanderburg II

MyBoard is a personal board/forum meant to be used either by itself or aside
an existing website.  It is primarily intended for use by myself, however is
made available in case anyone else is interested.  It is not to be confused with
MyBB, which is also a forum software.

\section readme_features Features

\section readme_config Configuration

Various classes fo the framework and board can be configured by the configuration
passed to the \ref mrbavii::Framework::App "App" construction.  This section describes the configuration values
that are available.

\subsection readme_config_normalization Normalization

Values are normalized at the following locations in the App class.

 - Service class and constructors names during \ref mrbavii::Framework::App::getService "App::getService"
 - Arguments to service class or construct functions during \ref mrbavii::Framework::App::getService "App::getService"
 - Arguments to service method calls during \ref mrbavii::Framework::App::getService "App::getService"
 - The value of configuration items during \ref mrbavii::Framework::App::getConfig "App::getConfig"

During a direct call to getConfig

 - If the named configuration value does not exist, the default value is normalized and returned.
 - If the normalized value of the configuration value is null, the default value is normalized and returned.
 - Otherwise, the normalized value of the configuration value is returned.

During normalization:

 - If the value is a sevice reference, getService is called and the result returned.  This will be
   null if the service does not exist.
 - If the value is a configuration reference, getConfig is called with null as a default and the
   result returned.  This will be null if the configuration does not exist or the normalized value is null.
 - If the value is an array, an array is returned with the same keys, but each value is normalized
   recursively.  If a specific value can not be normalized, the value of that key will be set to null.
 - If the value is a string, parameters may be substituted in the form of "%param%".  This will
   result in a call to getConfig with a default value of null.  If any parameter substitution
   in a string is null, null is returned.  Otherwise the string value is returned after substitution.

Because of the way configuration works, services and other areas that use configurations should
be prepared to accept null arguments or arrays will null values.  While a direct call to getConfig
can specify a default value, if the value of the configuration can even be partially normalized, such
as an array, then the result will not be the default value but the partially normalized items, which may
contain null values.  String substitution in which any part of a substitution can not be normalized
will be entirely set to null instead of trying to guess what to do with the missing substitution data.

\subsection readme_config_framework Framework

\b App

 - \b app.dispatcher.filename \n
   The root dispatcher PHP file.  This file will be loaded during dispatch.
   The initial parameters $app, $request, and $path will be set.
 - \b app.error.enable_handler \n
   Whether to enable the internal error handlers or not.  If set, then errors
   and exceptions will be handled by App::errorHandler and App::exceptionHandler. \n
   DEFAULT: FALSE
 - \b app.error.report_all \n
   Whether to set error reporting to E_ALL.  If FALSE, the error reporting is
   not changed. \n
   DEFAULT: TRUE
 - \b app.error.show_user \n
   If TRUE, display_errors will be turned on, otherwise it will be turned off. \n
   DEFAULT: FALSE
 - \b app.datadir.<name> \n
   The directory for named data files called <name>.  Used by App::getDataDir
 - \b app.datadir.app \n
   The directory for application data files.  Used by default services
   such as Template \n
 - \b app.datadir.user \n
   The data directory for user data files.  Used by default services such
   as Template \n

\b Template

 - \b template.path \n
   The array search path for templates. \n
   DEFAULT: array("%app.datadir.user%/templates", "%app.datadir.app%/templates")
 - \b template.params \n
   The array of parameters to initially set for each template. \n
   DEFAULT: array()
 - \b template.ext \n
   The extension to expect for templates \n
   DEFAULT: ".phtml"

\b MimeType

When determine the content type of a file, a parameter can be used to determine
whether file extensions, a magic file, or both are used.  File extensions are
checked first, with the longest matched extension determining the type.  Magic
file checks are performed second.

 - \b mime.types \n
   An array of file name endings to content type values.  The result is merged into
   an internal set of defaults. \n
   DEAULT: array()
 - \b mime.magic.enable \n
   Enable or disable the use of a mime magic file. \n
   DEFAULT: TRUE
 - \b mime.magic.file \n
   Specify which magic file to use for mime magic checks. If not specified, the 
   default location will be used.

\subsection readme_config_board Board

 - \b app.dispatcher.filename \n
   SET: __DIR__ . "/dispatcher/main.php"
 - \b app.datadir.app \n
   SET: Board internal data directory
 - \b app.datadir.user \n
   The directory for user changes to board data files. \n
   REQUIERD
*/
